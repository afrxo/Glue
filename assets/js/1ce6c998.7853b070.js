"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[718],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(v,l(l({ref:t},p),{},{components:r})):n.createElement(v,l({ref:t},p))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},13484:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={sidebar_position:4},l="Bootstrap",i={unversionedId:"bootstrap",id:"bootstrap",title:"Bootstrap",description:"Here is an ideal project structure, also outlined in the boilerplate.",source:"@site/docs/bootstrap.md",sourceDirName:".",slug:"/bootstrap",permalink:"/glue/docs/bootstrap",draft:!1,editUrl:"https://github.com/afrxo/glue/edit/master/docs/bootstrap.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/glue/docs/intro"},next:{title:"Packages",permalink:"/glue/docs/packages"}},s={},c=[{value:"Server Bootstrap",id:"server-bootstrap",level:2},{value:"Client Bootstrap",id:"client-bootstrap",level:2},{value:"Modules",id:"modules",level:2},{value:"Providers",id:"providers",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bootstrap"},"Bootstrap"),(0,o.kt)("p",null,"Here is an ideal project structure, also outlined in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/afrxo/Glue-Boilerplate"},"boilerplate"),"."),(0,o.kt)("p",null,"Your game should include two bootstrap scripts, client-server per. They should both fully configure and start glue.\nHere's how they'd look like:"),(0,o.kt)("h2",{id:"server-bootstrap"},"Server Bootstrap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'-- Bootstrap.server.lua\n\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal ServerScriptService = game:GetService("ServerScriptService")\n\nlocal Glue = require(ReplicatedStorage.Wally.Glue)\n\nlocal Providers = script\nlocal SharedModules = ReplicatedStorage.Shared\nlocal ServerModules = ServerScriptService.Modules\nlocal Imports = {ServerModules, SharedModules}\n\nlocal function requireProviders(Directory: Instance)\n    for _, descendant in ipairs(Directory:GetDescendants()) do\n        if (descendant:IsA("ModuleScript")) then\n            require(descendant)\n        end\n    end\nend\n\nGlue.Imports(Imports)\nrequireProviders(Providers)\n\nGlue.Stick():andThen(function()\n    print("Server Bootstrap complete.")\nend)\n')),(0,o.kt)("h2",{id:"client-bootstrap"},"Client Bootstrap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'-- Bootstrap.client.lua\n\nlocal StarterPlayer = game:GetService("StarterPlayer")\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal Glue = require(ReplicatedStorage.Wally.Glue)\n\nlocal Providers = script\nlocal ClientModules = StarterPlayer.Modules\nlocal SharedModules = ReplicatedStorage.Shared\nlocal Imports = {ClientModules, SharedModules}\n\nlocal function requireProviders(Directory: Instance)\n    for _, descendant in ipairs(Directory:GetDescendants()) do\n        if (descendant:IsA("ModuleScript")) then\n            require(descendant)\n        end\n    end\nend\n\nGlue.Imports(Imports)\nrequireProviders(Providers)\n\nGlue.Stick():andThen(function()\n    print("Client Bootstrap complete.")\nend)\n')),(0,o.kt)("h2",{id:"modules"},"Modules"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Shared modules are to be kept within ",(0,o.kt)("inlineCode",{parentName:"li"},"ReplicatedStorage/Shared"),"."),(0,o.kt)("li",{parentName:"ul"},"Server modules are to be kept within ",(0,o.kt)("inlineCode",{parentName:"li"},"ServerScriptService/Modules"),"."),(0,o.kt)("li",{parentName:"ul"},"Client modules are to be kept within ",(0,o.kt)("inlineCode",{parentName:"li"},"StarterPlayer/Modules"),".")),(0,o.kt)("h2",{id:"providers"},"Providers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Providers are to be kept within the environments according bootstrap script.")))}u.isMDXComponent=!0}}]);