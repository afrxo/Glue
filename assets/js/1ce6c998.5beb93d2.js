"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[718],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),v=o,f=d["".concat(c,".").concat(v)]||d[v]||u[v]||a;return t?n.createElement(f,l(l({ref:r},p),{},{components:t})):n.createElement(f,l({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=v;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},13484:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=t(87462),o=(t(67294),t(3905));const a={sidebar_position:4},l="Bootstrap",i={unversionedId:"bootstrap",id:"bootstrap",title:"Bootstrap",description:"Here is an ideal project structure, also outlined in the boilerplate.",source:"@site/docs/bootstrap.md",sourceDirName:".",slug:"/bootstrap",permalink:"/glue/docs/bootstrap",draft:!1,editUrl:"https://github.com/afrxo/glue/edit/master/docs/bootstrap.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/glue/docs/intro"},next:{title:"Networking",permalink:"/glue/docs/networking"}},c={},s=[{value:"Server Bootstrap",id:"server-bootstrap",level:2},{value:"Client Bootstrap",id:"client-bootstrap",level:2},{value:"Providers",id:"providers",level:2}],p={toc:s},d="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bootstrap"},"Bootstrap"),(0,o.kt)("p",null,"Here is an ideal project structure, also outlined in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/afrxo/Glue-Boilerplate"},"boilerplate"),"."),(0,o.kt)("p",null,"Your game should include two bootstrap scripts, client-server per. They should both fully configure and start glue.\nHere's how they'd look like:"),(0,o.kt)("h2",{id:"server-bootstrap"},"Server Bootstrap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'-- Bootstrap.server.lua\n\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal ServerScriptService = game:GetService("ServerScriptService")\n\nlocal Glue = require(ReplicatedStorage.Wally.Glue)\n\nlocal Providers = script\nlocal SharedModules = ReplicatedStorage.Shared\nlocal ServerModules = ServerScriptService.Modules\nlocal Imports = {ServerModules, SharedModules}\n\nlocal function requireProviders(Directory: Instance)\n    for _, descendant in ipairs(Directory:GetDescendants()) do\n        if (descendant:IsA("ModuleScript")) then\n            require(descendant)\n        end\n    end\nend\n\nGlue.Imports(Imports)\nrequireProviders(Providers)\n\nGlue.Stick():andThen(function()\n    print("Server Bootstrap complete.")\nend)\n')),(0,o.kt)("h2",{id:"client-bootstrap"},"Client Bootstrap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'-- Bootstrap.client.lua\n\nlocal StarterPlayer = game:GetService("StarterPlayer")\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal Glue = require(ReplicatedStorage.Wally.Glue)\n\nlocal Providers = script\nlocal ClientModules = StarterPlayer.Modules\nlocal SharedModules = ReplicatedStorage.Shared\nlocal Imports = {ClientModules, SharedModules}\n\nlocal function requireProviders(Directory: Instance)\n    for _, descendant in ipairs(Directory:GetDescendants()) do\n        if (descendant:IsA("ModuleScript")) then\n            require(descendant)\n        end\n    end\nend\n\nGlue.Imports(Imports)\nrequireProviders(Providers)\n\nGlue.Stick():andThen(function()\n    print("Client Bootstrap complete.")\nend)\n')),(0,o.kt)("h2",{id:"providers"},"Providers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Providers are to be kept within the environments according bootstrap script.")))}u.isMDXComponent=!0}}]);